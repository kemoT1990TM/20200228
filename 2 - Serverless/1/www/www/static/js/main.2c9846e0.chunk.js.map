{"version":3,"sources":["logo.svg","components/main/ProdForm.js","components/main/ProdTable.js","components/main/ProdIssues.js","views/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ProdForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loading","API_URL","state","app_id","app_token","name","machine_key","appData","error","apiUrl","handleChange","bind","assertThisInitialized","handleSubmit","nextProps","event","setState","defineProperty","target","id","value","_this2","fetch","headers","Content-Type","method","body","JSON","stringify","then","res","ok","json","console","log","status","statusText","type","data","application_id","preventDefault","appDataInfo","react_default","a","createElement","className","user_name","application_token","create_date","expiration_date","errorInfo","onSubmit","htmlFor","onChange","Component","ProdTable","items","map","item","key","ProdIssues","issues","issue","issueId","applicationId","userName","message","Main","loadAllProd","params","service_url","appIdProd","appTokenProd","Authorization","header_token","catch","Items","loadAllProdIssues","errorIssues","errorInfoIssues","main_ProdForm","onClick","main_ProdTable","main_ProdIssues","App","role","views_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c9846e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nclass ProdForm extends Component {\r\n\r\n    loading = false;\r\n\r\n    //API_URL = 'https://localhost:44327';\r\n    API_URL = '';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            app_id: '',\r\n            app_token: '',\r\n            name: '',\r\n            machine_key: '',\r\n            appData: '',\r\n            error: ''\r\n        };\r\n        this.API_URL = props.apiUrl;\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.API_URL = nextProps.apiUrl;\r\n        //this.setState({ items: nextProps.items });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        fetch(this.API_URL, {\r\n            headers: {\r\n                'Content-Type': 'application/json'//,\r\n                //'Accept': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n        }).then((res) => {\r\n            if (!res.ok) {\r\n                console.log('ERRROR: ' + res.status);\r\n                this.setState({\r\n                    appData: '',\r\n                    error: 'Status: ' + res.status + ', text' + res.statusText + ', type ' + res.type\r\n                });\r\n                //400 bad request\r\n                //itd\r\n                return null;\r\n            } else {\r\n                return res.json();\r\n            }\r\n        }).then((data) => {\r\n            if (data) {\r\n                if(data.application_id) {\r\n                    this.setState({\r\n                        appData: data,\r\n                        error: ''\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        appData: '',\r\n                        error: data\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        let appDataInfo = <div></div>;\r\n        if (this.state.appData) {\r\n            appDataInfo = <ul className=\"list-group\">\r\n                <li className=\"list-group-item\"><div>application_id: {this.state.appData.application_id}</div></li>\r\n                <li className=\"list-group-item\"><div>user_name: {this.state.appData.user_name}</div></li>\r\n                <li className=\"list-group-item\"><div>machine_key: {this.state.appData.machine_key}</div></li>\r\n                <li className=\"list-group-item\"><div>application_token: {this.state.appData.application_token}</div></li>\r\n                <li className=\"list-group-item\"><div>create_date: {this.state.appData.create_date}</div></li>\r\n                <li className=\"list-group-item\"><div>expiration_date: {this.state.appData.expiration_date}</div></li>\r\n            </ul>\r\n        }\r\n        let errorInfo = <div></div>\r\n        if (this.state.error) {\r\n            errorInfo = <div className=\"alert alert-warning\">\r\n                <strong>Warning!</strong> {this.state.error}\r\n        </div>\r\n        }\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"appId\" className=\"col-sm-4 col-form-label\">App ID:</label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"app_id\" onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"appToken\" className=\"col-sm-4 col-form-label\">App token:</label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"app_token\" onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"userName\" className=\"col-sm-4 col-form-label\">Name:</label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"name\" onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"machineKey\" className=\"col-sm-4 col-form-label\">Machine key:</label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"machine_key\" onChange={this.handleChange} />\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                {appDataInfo}\r\n                {errorInfo}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProdForm;","import React, { Component } from 'react';\r\n\r\nclass ProdTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: this.props.items//,\r\n            //api_address: this.props.api\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ items: nextProps.items });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Application Id</th>\r\n                        <th>Application token</th>\r\n                        <th>Create date</th>\r\n                        <th>Expiration date</th>\r\n                        <th>Machine key</th>\r\n                        <th>User name</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{this.state.items.map(function (item, key) {\r\n\r\n                    return (\r\n                        <tr key={key}>\r\n                            <td>{item.application_id}</td>\r\n                            <td>{item.application_token}</td>\r\n                            <td>{item.create_date}</td>\r\n                            <td>{item.expiration_date}</td>\r\n                            <td>{item.machine_key}</td>\r\n                            <td>{item.user_name}</td>\r\n                        </tr>\r\n                    )\r\n                })}</tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProdTable;","import React, { Component } from 'react';\r\n\r\nclass ProdIssues extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            issues: this.props.issues\r\n        }\r\n    }\r\n\r\n    componentDidMount() { }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ issues: nextProps.issues });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Issue Id</th>\r\n                        <th>Application Id</th>\r\n                        <th>User name</th>\r\n                        <th>Message</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{this.state.issues.map(function (issue, key) {\r\n\r\n                    return (\r\n                        <tr key={key}>\r\n                            <td>{issue.issueId}</td>\r\n                            <td>{issue.applicationId}</td>\r\n                            <td>{issue.userName}</td>\r\n                            <td>{issue.message}</td>\r\n                        </tr>\r\n                    )\r\n                })}</tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProdIssues;","import React, { Component } from 'react';\r\nimport ProdForm from '../components/main/ProdForm'\r\nimport ProdTable from '../components/main/ProdTable'\r\nimport ProdIssues from '../components/main/ProdIssues'\r\n\r\nclass Main extends Component {\r\n\r\n    //API_URL = 'https://ac4vomawb6.execute-api.eu-westac4vomawb6.execute-api.eu-west1.amazonaws.com';\r\n    //API_URL = 'https://localhost:44327/api';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            issues: [],\r\n            header_token: '',\r\n            app_id: '',\r\n            service_url: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() { }\r\n\r\n    loadAllProd = () => {\r\n        let params = '';\r\n        if (this.state.service_url && this.state.appIdProd && this.state.appTokenProd) {\r\n            params = '?app_id=' + this.state.appIdProd + '&app_token=' + this.state.appTokenProd;\r\n\r\n            fetch(this.state.service_url + params, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": this.state.header_token\r\n                    //'Accept': 'application/json'\r\n                }\r\n            }).catch(error => {\r\n                this.setState({\r\n                    items: [],\r\n                    error: JSON.stringify(error)\r\n                });\r\n                })\r\n                .then((res) => {\r\n                    if(!res) {\r\n                        this.setState({\r\n                            items: [],\r\n                            error: 'res is null!'\r\n                        });\r\n                    } else if (!res.ok) {\r\n                        this.setState({\r\n                            items: [],\r\n                            error: 'Status: ' + res.status + ', text' + res.statusText + ', type ' + res.type\r\n                        });\r\n                        //400 bad request\r\n                        //itd\r\n                        return null;\r\n                    } else {\r\n                        return res.json();\r\n                    }\r\n                })\r\n                .then((data) => {\r\n                    if (data && data.Items) {\r\n                        this.setState({\r\n                            items: data.Items,\r\n                            error: ''\r\n                        });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({\r\n                items: [],\r\n                error: 'Service url, App ID and App Token are required'\r\n            });\r\n        }\r\n    }\r\n\r\n    loadAllProdIssues = () => {\r\n        if (this.state.app_id) {\r\n            fetch(this.state.service_url + '/issue/' + this.state.app_id)\r\n            .catch(error => {\r\n                this.setState({\r\n                    issues: [],\r\n                    errorIssues: error\r\n                });\r\n            })\r\n            .then((res) => {\r\n                if(!res) {\r\n                    this.setState({\r\n                        issues: [],\r\n                        errorIssues: 'res is null!'\r\n                    });\r\n                } else if (!res.ok) {\r\n                    this.setState({\r\n                        issues: [],\r\n                        errorIssues: 'Status: ' + res.status + ', text' + res.statusText + ', type ' + res.type\r\n                    });\r\n                    return null;\r\n                } else {\r\n                    return res.json();\r\n                }\r\n            })\r\n            .then((data) => {\r\n                if (data && data.issues) {\r\n                    this.setState({\r\n                        issues: data.issues,\r\n                        errorIssues: ''\r\n                    });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorIssues: 'Application id is required'\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        let errorInfo = <div></div>\r\n        if (this.state.error) {\r\n            errorInfo = <div className=\"alert alert-warning\">\r\n                <strong>Warning! </strong> {this.state.error}\r\n            </div>\r\n        }\r\n\r\n        let errorInfoIssues = <div></div>\r\n        if (this.state.errorIssues) {\r\n            errorInfoIssues = <div className=\"alert alert-warning\">\r\n                <strong>Warning! </strong> {this.state.errorIssues}\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"service_url\" className=\"col-sm-4 col-form-label\">Service URL:</label>\r\n                        <div className=\"col-sm-8\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"service_url\" onChange={this.handleChange} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"page-header\">\r\n                    <b>Machine request:</b>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <ProdForm apiUrl={this.state.service_url} />\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n                <form>\r\n                    <div className=\"form-group row\">\r\n                    <label htmlFor=\"appIdProd\" className=\"col-sm-4 col-form-label\">App ID:</label>\r\n                        <div className=\"col-sm-8\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"appIdProd\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <label htmlFor=\"appTokenProd\" className=\"col-sm-4 col-form-label\">App token:</label>\r\n                        <div className=\"col-sm-8\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"appTokenProd\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <label htmlFor=\"header_token\" className=\"col-sm-4 col-form-label\">Authorization token:</label>\r\n                        <div className=\"col-sm-8\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"header_token\" onChange={this.handleChange} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-sm btn-primary\" onClick={this.loadAllProd}>Load all items</button>\r\n                    <div className=\"col-md-12\">\r\n                        <ProdTable items={this.state.items} />\r\n                    </div>\r\n                </div>\r\n                {errorInfo}\r\n                <hr />\r\n                <form>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"app_id\" className=\"col-sm-4 col-form-label\">App ID:</label>\r\n                        <div className=\"col-sm-8\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"app_id\" onChange={this.handleChange} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-sm btn-primary\" onClick={this.loadAllProdIssues}>Load all issues</button>\r\n                    <div className=\"col-md-12\">\r\n                        <ProdIssues issues={this.state.issues} />\r\n                    </div>\r\n                </div>\r\n                {errorInfoIssues}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './views/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n        <div className=\"container theme-showcase\" role=\"main\">\n          <div className=\"jumbotron\">\n            <Main></Main>\n            <hr />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}